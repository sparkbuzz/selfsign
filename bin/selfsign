#!/usr/bin/env sh

# Resolve path to this script, even if executed via a symlink
if [ $(uname) = 'Darwin' ]; then
  SCRIPT_PATH="$(dirname "$(readlink "$0")")" # MacOS
else
  SCRIPT_PATH="$(dirname "$(readlink -f "$0")")" # Linux etc.
fi

source ${SCRIPT_PATH}/../config/color.sh
source ${SCRIPT_PATH}/../config/ssl.sh
source ${SCRIPT_PATH}/../lib/functions.sh

# Show usage info with no args or -h or --help
[[ $# -eq 0 || $1 == "-h" || $1 == "--help" ]] && usage

# Output path is current working directory by default
OUT_PATH="$PWD"

# First (unnamed) argument is the domain
DOMAIN=$1; shift

# Resolve any remaining arguments
while [ $# -gt 0 ]; do
  key="$1"
  case $key in  
    -o|--out)
      OUT_PATH="$2"; shift 2;;
    *)
      echo "Unknown argument $1";
      exit 1;
      ;;
  esac
done

if [ ! -d ${OUT_PATH} ]; then
  mkdir -p "${OUT_PATH}"
fi

# Generate RSA key -> CSR -> Certificate
generate_rsa_key ${OUT_PATH} ${DOMAIN}
generate_csr ${OUT_PATH} ${DOMAIN}
generate_certificate ${OUT_PATH} ${DOMAIN}

# Output certificate info
certificate_info ${OUT_PATH}/cert.pem
list_permissions "$OUT_PATH/cert.csr $OUT_PATH/cert.pem $OUT_PATH/privkey.pem"

echo "Certificate generated!"
